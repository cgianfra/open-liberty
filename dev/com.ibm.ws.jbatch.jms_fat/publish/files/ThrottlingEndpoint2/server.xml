<server description="BatchJmsEndpoint2">

	 <!-- Enable features -->
    <featureManager>
        <feature>batchManagement-1.0</feature>
        <feature>appSecurity-2.0</feature>
    	<feature>wasJmsClient-2.0</feature>
    	<feature>timedexit-1.0</feature>
    </featureManager>
    
    <iiopEndpoint id="defaultIiopEndpoint" iiopPort="${bvt.prop.IIOP}">
        <iiopsOptions  iiopsPort="${bvt.prop.IIOP.secure}" sslRef="defaultSSLConfig"/>
    </iiopEndpoint>

    <wasJmsEndpoint host="localhost" wasJmsPort="${bvt.prop.jms}" wasJmsSSLPort="${bvt.prop.jms.ssl}" />
    
	<jndiEntry jndiName="serverName" value="${wlp.server.name}"/>
    
  	<httpEndpoint id="defaultHttpEndpoint"
  	    	      host="*"
  	    	      httpPort="${bvt.prop.batch.endpoint_2_HTTP_default}"
  	    	      httpsPort="${bvt.prop.batch.endpoint_2_HTTP_default.secure}">
		<tcpOptions soReuseAddr="true" />
    </httpEndpoint>
    
	<batchPersistence jobStoreRef="BatchDatabaseStore" />

    <databaseStore id="BatchDatabaseStore" dataSourceRef="batchDB" schema="JBATCH" tablePrefix="" />

	<library id="DerbyLib">
	    <file name="${shared.resource.dir}/derbyclient/derbyclient.jar"/>
	</library>

	<library id="DerbyEmbeddedLib">
		<fileset dir="${shared.resource.dir}/derby" includes="derby.jar"/>
	</library>
	
	<!-- The following configures in-memory Derby.  For Derby on disk, which is needed if the database
   	is required beyond a single server start, configure the databaseName with a file location such as:
   	databaseName="${shared.config.dir}/data/derbydb" -->
	
	<dataSource id="batchDB" jndiName="jdbc/batch" type="javax.sql.XADataSource">
      <jdbcDriver libraryRef="DerbyLib"/>
      <properties.derby.client databaseName="memory:BATCHDB"
      						   loginTimeout="360s"
                               user="user" password="pass"
                               portNumber="1527"/>
    </dataSource>	

   	
   	<!--  Both use the same DB -->
	<dataSource id="BonusPayoutNoTran" jndiName="jdbc/BonusPayoutNoTranDS" type="javax.sql.ConnectionPoolDataSource" transactional="false">
		<jdbcDriver libraryRef="DerbyEmbeddedLib" />
        <properties.derby.embedded databaseName="memory:BonusPayoutDB"
			createDatabase="create" user="user" password="pass" />
	</dataSource>

	<dataSource id="BonusPayout" jndiName="jdbc/BonusPayoutDS" type="javax.sql.XADataSource">
		<jdbcDriver libraryRef="DerbyEmbeddedLib" />
        <properties.derby.embedded databaseName="memory:BonusPayoutDB"
			createDatabase="create" user="user" password="pass" />
	</dataSource>
   	
    <keyStore id="defaultKeyStore" location="${server.config.dir}/resources/security/key.p12" type="PKCS12" password="{xor}EzY9Oi0rJg==" />
	    <!--keyStore id="defaultKeyStore" password="Liberty"/-->
    <basicRegistry id="basic" realm="ibm/api">
        <user name="bob" password="bobpwd"/>
        <user name="jane" password="janepwd"/>
        <user name="chuck" password="chuckpwd"/>
    </basicRegistry>
	
    <administrator-role><user>bob</user></administrator-role>

	<!-- Everyone is a batch admin for non security related tests -->
	<authorization-roles id="com.ibm.ws.batch">
		<security-role name="batchAdmin">
			<user name="bob" />			
		</security-role>
		<security-role name="batchMonitor" >
			<user name="chuck"/>
		</security-role>
	</authorization-roles>
	
	<batchJmsExecutor activationSpecRef="batchActivationSpec"
					  queueRef="batchJobSubmissionQueue"/>					  
	
		<!-- note that message selector need space around the equal sign-->
        <jmsActivationSpec id="batchActivationSpec">
		<properties.wasJms maxBatchSize="3" maxConcurrency="2"
                                   messageSelector="(com_ibm_ws_batch_applicationName = 'SimpleBatchJob' OR com_ibm_ws_batch_applicationName = 'BonusPayout') AND (com_ibm_ws_batch_work_type = 'Partition')"
		                   destinationRef="batchJobSubmissionQueue"
		                   destinationType="javax.jms.Queue"
                           replyConnectionFactoryRef="batchConnectionFactory"
		                   remoteServerAddress="localhost:${bvt.prop.jms.1}:BootstrapBasicMessaging">
		</properties.wasJms>
	</jmsActivationSpec>
		
	<jmsQueue id="batchJobSubmissionQueue" jndiName="jms/batch/jobSubmissionQueue">
		<properties.wasJms deliveryMode="Persistent" queueName="batchLibertyQueue" readAhead="AsConnection" timeToLive="0"></properties.wasJms>
	</jmsQueue>

        <jmsConnectionFactory id="batchConnectionFactory" jndiName="jms/batch/connectionFactory">
                <properties.wasJms remoteServerAddress="localhost:${bvt.prop.jms.1}:BootstrapBasicMessaging"/>
        </jmsConnectionFactory>

        <batchJmsEvents connectionFactoryRef="batchConnectionFactory" />
        
    <javaPermission className="java.net.SocketPermission" name="*" actions="connect,resolve"/>
	
</server>
