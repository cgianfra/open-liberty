<server description="BatchJmsThrottlingDispatcher">

        <include location="../fatTestPorts.xml" onConflict="IGNORE"/> 

	<!-- Enable features -->
	<featureManager>
		<feature>batchManagement-1.0</feature>
		<feature>wasJmsClient-2.0</feature>
		<feature>osgiConsole-1.0</feature>
		<feature>jaxrs-2.0</feature>
		<feature>cdi-1.2</feature>
		<feature>mdb-3.2</feature>
		<feature>jsonp-1.0</feature>
	</featureManager>

	<httpEndpoint id="defaultHttpEndpoint" host="*"
		httpPort="${bvt.prop.batch.dispatcher_1_HTTP_default}" httpsPort="${bvt.prop.batch.dispatcher_1_HTTP_default.secure}">
		<tcpOptions soReuseAddr="true" />
	</httpEndpoint>

	<jndiEntry jndiName="serverName" value="${wlp.server.name}" />

	<batchPersistence jobStoreRef="BatchDatabaseStore" />

	<databaseStore id="BatchDatabaseStore" dataSourceRef="batchDB"
		schema="JBATCH" tablePrefix="" />


	<library id="DerbyLib">
	    <file name="${shared.resource.dir}/derbyclient/derbyclient.jar"/>
	</library>
	
	<!-- The following configures in-memory Derby.  For Derby on disk, which is needed if the database
    is required beyond a single server start, configure the databaseName with a file location such as:
    databaseName="${shared.config.dir}/data/derbydb" -->

	<dataSource id="batchDB" jndiName="jdbc/batch" type="javax.sql.XADataSource">
		<jdbcDriver libraryRef="DerbyLib" />
		<properties.derby.client createDatabase="create"
			databaseName="memory:BATCHDB" user="user"
			loginTimeout="360s"
			password="pass" portNumber="1527" />
	</dataSource>

	<dataSource id="batchDB" jndiName="jdbc/BonusPayoutDS" type="javax.sql.XADataSource">
		<jdbcDriver libraryRef="DerbyLib" />
		<properties.derby.client createDatabase="create"
			databaseName="memory:BATCHDB" user="user"
			password="pass" portNumber="1527" />
	</dataSource>


	<keyStore id="defaultKeyStore" location="${server.config.dir}/resources/security/key.p12" type="PKCS12"  password="{xor}EzY9Oi0rJg==" />
	<!--keyStore id="defaultKeyStore" password="Liberty"/ -->
	<basicRegistry id="basic" realm="ibm/api">
		<user name="bob" password="bobpwd" />
		<user name="jane" password="janepwd" />
		<user name="chuck" password="chuckpwd" />
	</basicRegistry>

	<administrator-role>
		<user>bob</user>
	</administrator-role>

	<!-- Everyone is a batch admin for non security related tests -->
	<authorization-roles id="com.ibm.ws.batch">
		<security-role name="batchAdmin">
			<user name="bob" />
			<user name="jane" />
			<user name="chuck" />
		</security-role>
	</authorization-roles>

	<batchJmsDispatcher connectionFactoryRef="batchConnectionFactory"
		queueRef="batchJobSubmissionQueue" />

	<batchJmsEvents connectionFactoryRef="batchConnectionFactory" />

	<jmsConnectionFactory id="batchConnectionFactory"
		jndiName="jms/batch/connectionFactory">
		<properties.wasJms remoteServerAddress="localhost:${bvt.prop.jms.1}:BootstrapBasicMessaging" />
	</jmsConnectionFactory>

	<jmsQueue id="batchJobSubmissionQueue" jndiName="jms/batch/jobSubmissionQueue">
		<properties.wasJms deliveryMode="Persistent"
			queueName="batchLibertyQueue" readAhead="AsConnection" timeToLive="0"></properties.wasJms>
	</jmsQueue>

	<jmsTopic id="topicBatchInstance" jndiName="jms/batch/topics/instance">
		<properties.wasJms topicName="batch/jobs/instance//*" />
	</jmsTopic>

	<jmsTopic id="topicBatchPartition" jndiName="jms/batch/topics/partition">
		<properties.wasJms topicName="batch/jobs/execution/partition//*" />
	</jmsTopic>

	<jmsActivationSpec id="ThrottlingMDB/PartitionSubscriber">
		<properties.wasJms destinationRef="topicBatchPartition"
			destinationType="javax.jms.Topic" remoteServerAddress="localhost:${bvt.prop.jms.1}:BootstrapBasicMessaging" />
	</jmsActivationSpec>
	
	<jmsActivationSpec id="ThrottlingMDB/JobInstanceSubscriber">
		<properties.wasJms destinationRef="topicBatchInstance"
			destinationType="javax.jms.Topic" remoteServerAddress="localhost:${bvt.prop.jms.1}:BootstrapBasicMessaging" />
	</jmsActivationSpec>
	
	<transaction totalTranLifetimeTimeout="6m"/>
	
	<javaPermission className="java.net.SocketPermission" name="*" actions="connect,resolve"/>
</server>
